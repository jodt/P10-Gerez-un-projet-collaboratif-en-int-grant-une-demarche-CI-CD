name: BobApp CI/CD

on:
  push:
    branches:
      - main
      - feat/github-actions
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  checks: write
  contents: read

jobs:
  back:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Run back-end tests
        run: mvn test
        working-directory: ./back

      - name: Generate JaCoCo coverage report
        run: mvn jacoco:report
        working-directory: ./back

      - name: Publish test report
        uses: phoenix-actions/test-reporting@v8
        id: test-report
        if: success() || failure()
        with:
          name: Backend Tests
          path: '**/target/surefire-reports/*.xml'
          reporter: java-junit

      - name: Upload JaCoCo report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: back/target/site/jacoco/

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        with:
          projectBaseDir: ./back
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          pollingTimeoutSec: 600
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


  front:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install front-end dependencies
        run: npm ci
        working-directory: ./front

      - name: Run front-end tests
        run: npx ng test --browsers=ChromeHeadless --watch=false --no-progress --code-coverage
        working-directory: ./front

      - name: Upload front-end coverage report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage-report
          path: front/coverage/bobapp/

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        with:
          projectBaseDir: ./front
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONT }}

      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          pollingTimeoutSec: 600
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONT }}


  deploy:
    name: Deploy to Docker
    runs-on: ubuntu-latest
    needs: [front, back]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}

      - name: Build and Push Back Image
        uses: docker/build-push-action@v6
        with:
          context: ./back
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/bobapp-back:latest

      - name: Build and Push Front Image
        uses: docker/build-push-action@v6
        with:
          context: ./front
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/bobapp-front:latest


